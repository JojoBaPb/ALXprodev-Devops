#!/bin/bash

# Directory to store the fetched data
mkdir -p pokemon_data

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Array to store process IDs
pids=()

# Fetch function
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" \
        -o "pokemon_data/${pokemon}.json"

    if [[ $? -eq 0 ]]; then
        echo "Saved data to pokemon_data/${pokemon}.json ✅"
    else
        echo "Error fetching data for $pokemon" >> errors.txt
        echo "❌ Failed to fetch data for $pokemon"
    fi
}

# Launch processes in background and track PIDs
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!) # Store the PID of the background job
done

# Wait for each process, kill if it takes too long
for pid in "${pids[@]}"; do
    # Wait for process with timeout (10s example)
    ( sleep 10 && kill -0 "$pid" 2>/dev/null && kill "$pid" && echo "Process $pid killed due to timeout" ) &
    watchdog_pid=$!

    wait "$pid" 2>/dev/null
    kill "$watchdog_pid" 2>/dev/null
done

echo "All Pokémon data fetched successfully."
